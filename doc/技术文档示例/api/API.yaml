openapi: 3.0.0
info:
  title: Tetris Leaderboard API
  description: API for submitting scores and retrieving the leaderboard for the Tetris game.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api # Base URL for Flask (example)
    description: Development server (Flask)
  - url: http://localhost:8080/api # Base URL for Crow (example)
    description: Development server (Crow)

paths:
  /scores:
    get:
      summary: Get the leaderboard
      description: Retrieves a list of top scores, sorted in descending order.
      operationId: getLeaderboard
      parameters:
        - name: limit
          in: query
          description: Maximum number of scores to return (e.g., top 10)
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of score records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScoreRecord'
        '500':
           description: Server error reading leaderboard data

    post:
      summary: Submit a new score
      description: Submits a player's score after a game ends.
      operationId: submitScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreInput'
      responses:
        '201':
          description: Score submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreRecord' # Return the submitted record with timestamp/id
        '400':
          description: Invalid input data (e.g., missing name or score)
        '500':
           description: Server error saving score data

components:
  schemas:
    ScoreRecord:
      type: object
      properties:
        playerName:
          type: string
          description: Name of the player
        score:
          type: integer
          description: Score achieved by the player
        timestamp:
          type: string
          format: date-time # ISO 8601 format
          description: Time when the score was submitted (generated by backend)
          readOnly: true
      required:
        - playerName
        - score
        - timestamp

    ScoreInput:
      type: object
      properties:
        playerName:
          type: string
          description: Name of the player (provided by user)
          maxLength: 50 # Example validation
        score:
          type: integer
          description: Score achieved by the player (sent from client)
          minimum: 0 # Example validation
      required:
        - playerName
        - score